# {{classname}}{{#description}}
{{description}}{{/description}}

All URIs are relative to *{{basePath}}*

Method | HTTP request | Description
------------- | ------------- | -------------
{{#operations}}{{#operation}}[**{{operationId}}**]({{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}

{{#operations}}
{{#operation}}
<a name="{{operationId}}"></a>
# **{{operationId}}**
``` Observable<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}>{{operationId}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})```

{{summary}}{{#notes}}

{{notes}}{{/notes}}

### Example
```java
// Import classes:
//import {{{invokerPackage}}}.ApiClient;
//import {{{invokerPackage}}}.ApiException;
//import {{{invokerPackage}}}.HttpClient;
//import com.my.package.drivers.HttpClientDriverImpl;
//import rx.Observer;
//import rx.Observable;
//import rx.Subscriber;

{{#hasAuthMethods}}
//import {{{invokerPackage}}}.auth.*;{{/hasAuthMethods}}
//import {{{invokerPackage}}}.models.*;
//import {{{package}}}.{{{classname}}};

HttpClient httpClient = new HttpClientDriverImpl();
ApiClient apiClient = new ApiClient(httpClient);
{{{classname}}} api = new {{{classname}}}(apiClient);

{{#hasAuthMethods}}
{{#authMethods}}{{#isBasic}}
// Configure HTTP basic authorization: {{{name}}}
apiClient.setUsername("YOUR USERNAME");
apiClient.setPassword("YOUR PASSWORD");
// OR ...
HttpBasicAuth {{{name}}} = (HttpBasicAuth) defaultClient.getAuthentication("{{{name}}}");
{{{name}}}.setUsername("YOUR USERNAME");
{{{name}}}.setPassword("YOUR PASSWORD");{{/isBasic}}{{#isApiKey}}
// Configure API key authorization: {{{name}}}
{{{name}}}.setApiKey("YOUR API KEY");
// OR ...
//ApiKeyAuth {{{name}}} = (ApiKeyAuth) apiClient.getAuthentication("{{{name}}}");
//{{{name}}}.setApiKey("YOUR API KEY");
// To set a prefix for the API key, e.g. "Token" (defaults to null):
//{{{name}}}.setApiKeyPrefix("KEYPREFIX");{{/isApiKey}}{{#isOAuth}}
// Configure OAuth2 access token for authorization: {{{name}}}
apiClient.setAccessToken("YOUR ACCESS TOKEN");
// OR ...
//OAuth {{{name}}} = (OAuth) apiClient.getAuthentication("{{{name}}}");
//{{{name}}}.setAccessToken("YOUR ACCESS TOKEN");{{/isOAuth}}
{{/authMethods}}
{{/hasAuthMethods}}

{{#allParams}}
{{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}
{{/allParams}}
Observable<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> apiObservable = api.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
Subscriber<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> apiSubscriber = new Subscriber<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}>() {
    @Override
    public void onNext({{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}} dtoResponse) {
        // TODO: Handle Response DTO
        System.out.println("Received Response" + dtoResponse.toString());
    }

    @Override
    public void onCompleted() {
        // TODO: Post-processing or Clean-up
        System.out.println("Api Call Complete");
    }

    @Override
    public void onError(Throwable e) {
        // TODO: Handle Errors (ApiException)
        System.out.println(e.getMessage());
    }
};
apiObservable.subscribe(apiSubscriber);
```

### Parameters
{{^allParams}}This endpoint does not need any parameter.{{/allParams}}{{#allParams}}{{#-last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------{{/-last}}{{/allParams}}
{{#allParams}} **{{paramName}}** | {{#isPrimitiveType}}**{{dataType}}**{{/isPrimitiveType}}{{^isPrimitiveType}}{{#isFile}}**{{dataType}}**{{/isFile}}{{^isFile}}[**{{dataType}}**]({{baseType}}.md){{/isFile}}{{/isPrimitiveType}}| {{description}} |{{^required}} [optional]{{/required}}{{#defaultValue}} [default to {{defaultValue}}]{{/defaultValue}}{{#allowableValues}} [enum: {{#values}}{{{.}}}{{^-last}}, {{/-last}}{{/values}}]{{/allowableValues}}
{{/allParams}}

### Return type

{{#returnType}}{{#returnTypeIsPrimitive}}**{{returnType}}**{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}[**{{returnType}}**]({{returnBaseType}}.md){{/returnTypeIsPrimitive}}{{/returnType}}{{^returnType}}null (empty response body){{/returnType}}

### Authorization

{{^authMethods}}No authorization required{{/authMethods}}{{#authMethods}}[{{name}}](../README.md#{{name}}){{^-last}}, {{/-last}}{{/authMethods}}

### HTTP request headers

 - **Content-Type**: {{#consumes}}{{{mediaType}}}{{#hasMore}}, {{/hasMore}}{{/consumes}}{{^consumes}}Not defined{{/consumes}}
 - **Accept**: {{#produces}}{{{mediaType}}}{{#hasMore}}, {{/hasMore}}{{/produces}}{{^produces}}Not defined{{/produces}}

{{/operation}}
{{/operations}}
